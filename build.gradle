/*
 * Copyright 2012 brands4friends, Private Sale GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configure(subprojects) {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'
    apply plugin: 'maven'

    // Define Dependencies
    apply from: "${rootProject.projectDir}/gradle/dependencies.gradle"

    group = 'de.brands4friends.daleq'
    version = '0.2.0-SNAPSHOT'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile deps.junit
        testCompile deps.hamcrest
        testCompile deps.easymock
        testCompile deps.sl4jSimple
    }

    test {
        maxHeapSize '400M'
        maxParallelForks 10
    }

    checkstyle {
        configFile file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
        configProperties.checkstyleConfigDir = configFile.parentFile
    }

    pmd {
        ruleSets = [
                'basic',
                'design',
                'braces',
                'clone',
                'strings',
                'optimizations',
                'strictexception',
                'typeresolution',
                'unusedcode',
                'coupling'
        ]
        ruleSetFiles = fileTree(dir: "${rootProject.projectDir}/config/pmd", include: '*.xml')
    }
}

project('daleq-core') {
    dependencies {
        compile deps.jodaTime
        compile deps.guava
        compile deps.commonsLang
        compile deps.commonsCodec
        compile deps.dbUnit

        testCompile deps.equalsverifier
    }
}

project('daleq-spring') {
    dependencies {
        compile project(':daleq-core')
        compile deps.springJdbc
    }
}

project('integration') {
    dependencies {
        compile project(':daleq-core')
        compile deps.springJdbc

        testCompile deps.springTest
        testCompile deps.hsqldb
    }
}

project('examples') {
    dependencies {
        compile project(':daleq-core')
        compile project(':daleq-spring')
        compile deps.springJdbc

        testCompile deps.springTest
        testCompile deps.hsqldb
    }
}
// set up maven repository export only for the projects, which should be exported.
configure(subprojects.findAll { ['daleq-core', 'daleq-spring'].contains(it.name) }) {

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    uploadArchives {
        repositories.mavenDeployer {
            configuration = configurations.archives

            def nexusUrl = project.hasProperty('nexus.url') ? project.getProperty('nexus.url') : null
            def nexusUser = project.hasProperty('nexus.user') ? project.getProperty('nexus.user') : null
            def nexusPassword = project.hasProperty('nexus.password') ? project.getProperty('nexus.password') : null

            repository(url: nexusUrl) {
                authentication(userName: nexusUser, password: nexusPassword)
            }

            pom.project {
                name 'Daleq - A Test Data DSL for unit testing SQL Queries'
                packaging 'jar'
                description 'Daleq is a DSL to define the content of a relational database in a concise and neat manner. It is actually very simple. '
                url 'https://github.com/brands4friends/daleq'
                inceptionYear '2012'

                scm {
                    url 'scm:git:https://github.com/brands4friends/daleq.git'
                    connection 'scm:git:https://github.com/brands4friends/daleq.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        comments """
                    /**
                        Copyright 2012 brands4friends, Private Sale GmbH

                        Licensed under the Apache License, Version 2.0 (the "License");
                        you may not use this file except in compliance with the License.
                        You may obtain a copy of the License at

                            http://www.apache.org/licenses/LICENSE-2.0

                        Unless required by applicable law or agreed to in writing, software
                        distributed under the License is distributed on an "AS IS" BASIS,
                        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                        See the License for the specific language governing permissions and
                        limitations under the License.
                        **/
               """
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'lgirndt'
                        name 'Lars Girndt'
                        email 'lars.girndt@brands4friends.com'
                        organization 'brands4friends'
                        organizationUrl 'http://www.brands4friends.de'
                        roles {
                            role 'Developer'
                        }
                        timezone '+1'
                    }
                }
            }
        }
    }
}
