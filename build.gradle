/*
 * Copyright 2012 brands4friends, Private Sale GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configure(allprojects) {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'

    group = 'de.brands4friends.daleq'
    version = '0.1.0'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile "junit:junit:4.8.2"
        testCompile "org.hamcrest:hamcrest-library:1.3.RC2"
        testCompile "org.easymock:easymock:3.1"
        testCompile "org.slf4j:slf4j-simple:1.5.6"
    }

//    // workaround for gradle bug. no debug var symbols in grade 1-09m
//    tasks.withType(Compile) { options.compilerArgs = ["-g:source,lines,vars"] }

    // Define Dependencies
//    apply from: "${rootProject.projectDir}/gradle/dependencies.gradle"

    test {
        maxHeapSize '800M'
//        debug true
        maxParallelForks 10
    }

    checkstyle {
        configFile file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
        configProperties.checkstyleConfigDir = configFile.parentFile
    }

    pmd {
        ruleSets = ['basic', 'design', 'braces', 'clone', 'strings', 'optimizations', 'strictexception', 'typeresolution', 'unusedcode', 'coupling']
        ruleSetFiles = fileTree(dir: "${rootProject.projectDir}/config/pmd", include: '*.xml')
    }
}

project('daleq') {
    dependencies {
        compile "joda-time:joda-time:1.6.2"
        compile "com.google.guava:guava:12.0"
        compile "commons-lang:commons-lang:2.6"
        compile "commons-codec:commons-codec:1.6"
        compile "org.dbunit:dbunit:2.4.8"
        compile "dom4j:dom4j:1.6.1"

        testCompile "nl.jqno.equalsverifier:equalsverifier:1.1.3"
    }
}

project('integration') {
    dependencies {
        compile project(':daleq')
        compile "org.springframework:spring-jdbc:3.1.1.RELEASE"
        testCompile "org.springframework:spring-test:3.1.1.RELEASE"
        testCompile "org.hsqldb:hsqldb:2.2.8"
    }
}

project('examples') {
    dependencies {
        compile project(':daleq')
        compile "org.springframework:spring-jdbc:3.1.1.RELEASE"
        testCompile "org.springframework:spring-test:3.1.1.RELEASE"
        testCompile "org.hsqldb:hsqldb:2.2.8"
    }
}
